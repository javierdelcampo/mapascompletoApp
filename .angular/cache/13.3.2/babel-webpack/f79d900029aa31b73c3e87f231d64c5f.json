{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Javier\\\\formacion\\\\Angular\\\\mapascompletoApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/placesApiClient\";\nexport let PlacesService = /*#__PURE__*/(() => {\n  class PlacesService {\n    constructor(placesApi) {\n      this.placesApi = placesApi;\n      this.isLoadingPlaces = false;\n      this.places = [];\n      this.getUserLocation();\n    }\n\n    get isUserLocationReady() {\n      return !!this.userLocation;\n    }\n\n    getUserLocation() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        // Transformamos el getCurrentPosition en una promesa\n        return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(({\n            coords\n          }) => {\n            _this.userLocation = [coords.longitude, coords.latitude];\n            resolve(_this.userLocation);\n          }, err => {\n            alert('No se pudo obtener la geolocalización');\n            console.log(err);\n            reject();\n          });\n        });\n      })();\n    }\n\n    getPlacesByQuery(query = '') {\n      //TODO: qué hacer cuando la query está vacía\n      var _a;\n\n      if (!this.userLocation) throw Error('No hay userLocation');\n      this.isLoadingPlaces = true;\n      this.placesApi.get(`${query}.json`, {\n        params: {\n          proximity: (_a = this.userLocation) === null || _a === void 0 ? void 0 : _a.join(',')\n        }\n      }).subscribe(resp => {\n        console.log(resp);\n        this.isLoadingPlaces = false;\n        this.places = resp.features;\n      });\n    }\n\n  }\n\n  PlacesService.ɵfac = function PlacesService_Factory(t) {\n    return new (t || PlacesService)(i0.ɵɵinject(i1.PlacesApiClient));\n  };\n\n  PlacesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlacesService,\n    factory: PlacesService.ɵfac,\n    providedIn: 'root'\n  });\n  return PlacesService;\n})();","map":null,"metadata":{},"sourceType":"module"}